name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      has-vercel-secrets: ${{ steps.check.outputs.has-secrets }}
    steps:
      - name: Check if Vercel secrets are configured
        id: check
        run: |
          if [[ "${{ secrets.VERCEL_TOKEN }}" != "" && "${{ secrets.VERCEL_ORG_ID }}" != "" && "${{ secrets.VERCEL_PROJECT_ID }}" != "" ]]; then
            echo "has-secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has-secrets=false" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: [check-secrets]
    if: ${{ needs.check-secrets.outputs.has-vercel-secrets == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test:ci
    
    - name: Build project
      run: npm run build
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: ${{ github.event.inputs.environment == 'production' && '--prod' || '' }}
        scope: ${{ secrets.VERCEL_ORG_ID }}
        alias-domains: ${{ github.event.inputs.environment == 'production' && 'myapp.com' || 'staging.myapp.com' }}
    
    - name: Notify deployment
      if: ${{ success() }}
      uses: 8398a7/action-slack@v3
      with:
        status: success
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        message: '${{ github.event.inputs.environment }} deployment successful! ðŸš€'

  skip-deploy:
    needs: [check-secrets]
    if: ${{ needs.check-secrets.outputs.has-vercel-secrets == 'false' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Skip deployment
        run: |
          echo "Cannot deploy - Vercel secrets not configured"
          echo "Please configure VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID secrets"
          exit 1 